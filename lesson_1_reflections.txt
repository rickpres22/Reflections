How did viewing a diff between two versions of a file help you see the bug that was introduced?
By viewing the diffrences in the files I was able to see what had changed in the two files.
By only looking at the changes the amount of info I had to scan thru to find the error was significantly less.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
It could help get me back to working code easier
It could save me if I head down a wrong path a long way

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
Pros: versions are complete and make sence
Cons: you have to remember to do it, you have to make commits at logical points

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
Coding canges offten effect mutiple files; all these need to be tracked
Other version control systems were not made for tracking changes to code

How can you use the commands git log and git diff to view the history of files?
git log showes a list of all the commits
git diff showes the diffrence of two commits

How might using version control make you more confident to make changes that could break something?
I know I can always get back to a stable version of the code

Now that you have your workspace set up, what do you want to try using Git for?
I will use it for getting files for the Sunshine app for android development class